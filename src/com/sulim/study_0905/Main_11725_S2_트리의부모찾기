package com.sulim.study_0905;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class Main_11725_S2_트리의부모찾기 {

	static int N;
	static ArrayList<Integer>[] list;
	static int[] arr;
	static boolean[] visited;
	
	public static void main(String[] args) throws Exception {

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		
		int N = Integer.parseInt(st.nextToken());
		
		list = new ArrayList[N+1];
		for(int i=0; i<N+1; i++) {
			list[i] = new ArrayList<>();
		}
		
		for(int i=0; i<N-1; i++) {
			st = new StringTokenizer(br.readLine());
			int a = Integer.parseInt(st.nextToken());
			int b = Integer.parseInt(st.nextToken());
			list[a].add(b);
			list[b].add(a);
		}
		
		arr = new int[N+1];
		visited = new boolean[N+1];
		
		Queue<Integer> q = new LinkedList<>();
		q.add(1);
		visited[1] = true;
		
		while(!q.isEmpty()) {
			int n = q.poll();
			
			for(int i=0; i<list[n].size(); i++) {
				int a = list[n].get(i);
				if(!visited[a]) {
					q.add(a);
					visited[a] = true;
					arr[a] = n;
				}
			}
		}
		
		for(int i=2; i<=N; i++) {
			System.out.println(arr[i]);
		}
		
	}

}
